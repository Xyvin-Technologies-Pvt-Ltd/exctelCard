name: Deploy Backend to Azure VM with ACR

on:
  push:
    paths:
      - "backend/**"
      - ".github/workflows/backend.yml"
    branches:
      - main

jobs:
  build-and-push:
    name: Build & Push to ACR
    runs-on: ubuntu-latest

    env:
      ACR_NAME: exctelcard                   # e.g. myacr123
      ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }} # e.g. myacr123.azurecr.io
      IMAGE_NAME: exctelCard-backend
      IMAGE_TAG: latest

    steps:
      - name: üì• Checkout repo
        uses: actions/checkout@v3

      # Login to Azure with Service Principal
      - name: üîê Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}

      # Login to ACR using Azure credentials
      - name: üîë Docker login to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_LOGIN_SERVER }}

      # Build & push image
      - name: üì¶ Build & Push Docker Image to ACR
        run: |
          docker build -t ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} ./backend
          docker push ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

  deploy:
    name: Deploy on Azure VM
    runs-on: ubuntu-latest
    needs: build-and-push

    env:
      ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}
      IMAGE_NAME: exctelCard-backend
      IMAGE_TAG: latest
      CONTAINER_NAME: exctelCard-backend
      PORT: 5001
      ENV_FILE_PATH: /home/azureuser/extelcard/.env/.env.production

    steps:
      - name: üöÄ Deploy using SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AZURE_VM_HOST }}
          username: ${{ secrets.AZURE_VM_USER }}
          key: ${{ secrets.AZURE_VM_KEY }}
          script: |
            set -e

            echo "üîë Logging into ACR using `az acr login`..."
            az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}
            az acr login --name exctelcard

            echo "üì¶ Pulling Docker image..."
            sudo docker pull ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

            echo "üßπ Stopping old container..."
            sudo docker stop ${{ env.CONTAINER_NAME }} || true
            sudo docker rm ${{ env.CONTAINER_NAME }} || true

            echo "‚úÖ Checking .env..."
            if [ ! -f "${{ env.ENV_FILE_PATH }}" ]; then
              echo "‚ùå .env.production not found at ${{ env.ENV_FILE_PATH }}"
              exit 1
            fi

            echo "üöÄ Running new container..."
            sudo docker run -d \
              -p ${{ env.PORT }}:${{ env.PORT }} \
              --restart always \
              --name ${{ env.CONTAINER_NAME }} \
              --env-file ${{ env.ENV_FILE_PATH }} \
              ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

            echo "üîç Verifying..."
            sudo docker ps | grep ${{ env.CONTAINER_NAME }}
            sudo docker logs ${{ env.CONTAINER_NAME }} --tail 10

            echo "‚úÖ Deployment done!"
